version: '3'

volumes:
  local_mysql_data: {}

services:
  {{ cookiecutter.project_slug }}:{% if cookiecutter.use_celery == 'y' %} &{{ cookiecutter.project_slug }}{% endif %}
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_local_django
    container_name: {{ cookiecutter.project_slug }}
    depends_on:
      - mysql
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.mysql
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    command: /start

  mysql:
    image: jumpserver/mysql:5
    container_name: {{ cookiecutter.project_slug }}_local_mysql
    volumes:
      - ./compose/local/mysql/my.cnf:/etc/mysql/my.cnf
      - local_mysql_data:/var/lib/mysql:Z
    env_file:
      - ./.envs/.local/.mysql
    command: --character-set-server=utf8
    healthcheck:
      test: "mysql -h127.0.0.1 -P$$DB_PORT -uroot -p$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  docs:
    image: {{ cookiecutter.project_slug }}_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./{{ cookiecutter.project_slug }}:/app/{{ cookiecutter.project_slug }}:z
    ports:
      - "7000:7000"
    command: /start-docs
  {%- if cookiecutter.use_mailhog == 'y' %}

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  {%- endif %}
  {%- if cookiecutter.use_celery == 'y' %}

  redis:
    image: redis:6
    container_name: {{ cookiecutter.project_slug }}_local_redis

  celeryworker:
    <<: *{{ cookiecutter.project_slug }}
    image: {{ cookiecutter.project_slug }}_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - mysql
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *{{ cookiecutter.project_slug }}
    image: {{ cookiecutter.project_slug }}_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - mysql
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celerybeat

  flower:
    <<: *{{ cookiecutter.project_slug }}
    image: {{ cookiecutter.project_slug }}_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

  {%- endif %}
  {%- if cookiecutter.js_task_runner == 'Gulp' %}

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: {{ cookiecutter.project_slug }}_local_node
    container_name: node
    depends_on:
      - {{ cookiecutter.project_slug }}
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"

  {%- endif %}
